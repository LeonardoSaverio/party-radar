{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/monokuma/dev/ProjetoIntegrador/party-radar/src/pages/PartyRegistration/PartyRegistrationInfos/index.tsx\";\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { Form } from '@unform/mobile';\nimport * as Yup from 'yup';\nimport getValidationErrors from \"../../../utils/getValidationErrors\";\nimport Input from \"../../../components/Input\";\nimport InputMask from \"../../../components/InputMask\";\nimport Button from \"../../../components/Button\";\nimport { Container, Title, BackToHome } from \"./styles\";\n\nvar SignUp = function SignUp() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      whatsappMask = _useState2[0],\n      setWhatsappMask = _useState2[1];\n\n  function dataTeste(data) {\n    console.log(data);\n  }\n\n  var handleRegisterData = useCallback(function _callee(data) {\n    var _formRef$current, phoneReg, schema, _formRef$current2, errors;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            (_formRef$current = formRef.current) == null ? void 0 : _formRef$current.setErrors({});\n            phoneReg = /^\\(\\d{2}\\) \\d{4,5}-\\d{4}$/gi;\n            schema = Yup.object().shape({\n              uf: Yup.string().required('UF obrigatória').min(2, 'UF inválida'),\n              city: Yup.string().required('Cidade obrigatória'),\n              latitude: Yup.number().required('Latitudade obrigatória'),\n              longitude: Yup.number().required('Longitude obrigatória'),\n              partyName: Yup.string().required('Nome da festa obrigatório'),\n              typeParty: Yup.string().required('Tipo da festa festa obrigatório'),\n              description: Yup.string().optional(),\n              whatsapp: Yup.string().matches(phoneReg, 'Esse número de telefone não é válido'),\n              date: Yup.string().required('Data dia, mês, ano são obrigatórios'),\n              time: Yup.string().required('Horário obrigatótio')\n            });\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(schema.validate(data, {\n              abortEarly: false\n            }));\n\n          case 6:\n            console.log(data);\n            _context.next = 17;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (!(_context.t0 instanceof Yup.ValidationError)) {\n              _context.next = 16;\n              break;\n            }\n\n            errors = getValidationErrors(_context.t0);\n            (_formRef$current2 = formRef.current) == null ? void 0 : _formRef$current2.setErrors(errors);\n            console.log(errors);\n            return _context.abrupt(\"return\");\n\n          case 16:\n            Alert.alert('Erro no cadastro', 'Ocorreu um erro ao fazer cadastro, tente novamente.');\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }, []);\n  var navigation = useNavigation();\n  var formRef = useRef(null);\n  var ufInputRef = useRef(null);\n  var cityInputRef = useRef(null);\n  var latitudeInputRef = useRef(null);\n  var longitudeInputRef = useRef(null);\n  var partyNameInputRef = useRef(null);\n  var typePartyInputRef = useRef(null);\n  var descriptionInputRef = useRef(null);\n  var dateInputRef = useRef(null);\n  var timeInputRef = useRef(null);\n  return React.createElement(React.Fragment, null, React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, React.createElement(BackToHome, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: 30,\n    color: \"#34cb78\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Cadastrar festa\")), React.createElement(Form, {\n    ref: formRef,\n    onSubmit: dataTeste,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(InputMask, {\n    returnKeyType: \"next\",\n    type: \"cel-phone\",\n    name: \"whatsapp\",\n    icon: \"\",\n    placeholder: \"Whatssap\",\n    keyboardType: \"numeric\",\n    options: {\n      maskType: 'BRL',\n      withDDD: true,\n      dddMask: '(99) '\n    },\n    onChangeText: function onChangeText(text) {\n      var _formRef$current3;\n\n      setWhatsappMask(text);\n      (_formRef$current3 = formRef.current) == null ? void 0 : _formRef$current3.setFieldValue('whatsapp', whatsappMask);\n    },\n    value: whatsappMask,\n    onSubmitEditing: function onSubmitEditing() {\n      var _ufInputRef$current;\n\n      (_ufInputRef$current = ufInputRef.current) == null ? void 0 : _ufInputRef$current.focus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), React.createElement(Input, {\n    ref: ufInputRef,\n    maxLength: 2,\n    returnKeyType: \"next\",\n    autoCapitalize: \"characters\",\n    name: \"uf\",\n    icon: \"\",\n    placeholder: \"UF\",\n    onSubmitEditing: function onSubmitEditing() {\n      var _cityInputRef$current;\n\n      (_cityInputRef$current = cityInputRef.current) == null ? void 0 : _cityInputRef$current.focus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }), React.createElement(Input, {\n    ref: cityInputRef,\n    returnKeyType: \"next\",\n    autoCapitalize: \"words\",\n    name: \"city\",\n    icon: \"\",\n    placeholder: \"Cidade\",\n    onSubmitEditing: function onSubmitEditing() {\n      var _partyNameInputRef$cu;\n\n      (_partyNameInputRef$cu = partyNameInputRef.current) == null ? void 0 : _partyNameInputRef$cu.focus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }), React.createElement(Input, {\n    ref: partyNameInputRef,\n    returnKeyType: \"next\",\n    autoCapitalize: \"words\",\n    name: \"partyName\",\n    icon: \"\",\n    placeholder: \"Nome da festa\",\n    onSubmitEditing: function onSubmitEditing() {\n      var _typePartyInputRef$cu;\n\n      (_typePartyInputRef$cu = typePartyInputRef.current) == null ? void 0 : _typePartyInputRef$cu.focus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }), React.createElement(Input, {\n    ref: typePartyInputRef,\n    returnKeyType: \"next\",\n    autoCapitalize: \"words\",\n    name: \"typeParty\",\n    icon: \"\",\n    placeholder: \"Tipo de festa\",\n    onSubmitEditing: function onSubmitEditing() {\n      var _descriptionInputRef$;\n\n      (_descriptionInputRef$ = descriptionInputRef.current) == null ? void 0 : _descriptionInputRef$.focus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }), React.createElement(Input, {\n    ref: descriptionInputRef,\n    maxLength: 200,\n    returnKeyType: \"send\",\n    autoCapitalize: \"sentences\",\n    name: \"description\",\n    icon: \"\",\n    placeholder: \"Descri\\xE7\\xE3o\",\n    onSubmitEditing: function onSubmitEditing() {\n      var _formRef$current4;\n\n      {}\n      (_formRef$current4 = formRef.current) == null ? void 0 : _formRef$current4.submitForm();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  })), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate('PartyRegistrationMap');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"Pr\\xF3ximo\")))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/monokuma/dev/ProjetoIntegrador/party-radar/src/pages/PartyRegistration/PartyRegistrationInfos/index.tsx"],"names":["React","useCallback","useRef","useState","Feather","Icon","useNavigation","Form","Yup","getValidationErrors","Input","InputMask","Button","Container","Title","BackToHome","SignUp","whatsappMask","setWhatsappMask","dataTeste","data","console","log","handleRegisterData","formRef","current","setErrors","phoneReg","schema","object","shape","uf","string","required","min","city","latitude","number","longitude","partyName","typeParty","description","optional","whatsapp","matches","date","time","validate","abortEarly","ValidationError","errors","Alert","alert","navigation","ufInputRef","cityInputRef","latitudeInputRef","longitudeInputRef","partyNameInputRef","typePartyInputRef","descriptionInputRef","dateInputRef","timeInputRef","flex","Platform","OS","undefined","goBack","marginTop","maskType","withDDD","dddMask","text","setFieldValue","focus","submitForm","navigate"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport { Image, View, ScrollView, KeyboardAvoidingView, Platform, TextInput, Alert } from 'react-native'\nimport MapView, { Marker } from 'react-native-maps'\n\nimport { Feather as Icon } from '@expo/vector-icons'\nimport { useNavigation } from '@react-navigation/native'\nimport { Form } from '@unform/mobile'\nimport { FormHandles } from '@unform/core'\nimport * as Yup from 'yup'\nimport getValidationErrors from '../../../utils/getValidationErrors'\n\n\nimport Input from '../../../components/Input'\nimport InputMask from '../../../components/InputMask'\nimport Button from '../../../components/Button'\n\n\n\nimport {\n  Container,\n  Title,\n  BackToHome,\n} from './styles'\n\n\ninterface PartyRegistrationFormData {\n  uf: string,\n  city: string,\n  latitude: number,\n  longitude: number,\n  partyName: string,\n  typeParty: string,\n  description: string,\n  whatsapp: string,\n  date: string,\n  time: string,\n}\n/*\nBom eu vou pegar e deixar o usuário inserir o endereço completo, depois passar para o mapa\npara ele conferir a localização. Outra forma seria do jeito basico, ele seleciona estado e \ncidade e depois marca o ponto no mapa\n*/\nconst SignUp: React.FC = () => {\nconst [whatsappMask, setWhatsappMask] = useState('')\n\n  function dataTeste (data: PartyRegistrationFormData) {\n    console.log(data)\n  }\n\n  const handleRegisterData = useCallback(async (data: PartyRegistrationFormData) => {\n    try {\n      formRef.current?.setErrors({})\n      const phoneReg = /^\\(\\d{2}\\) \\d{4,5}-\\d{4}$/gi\n      const schema = Yup.object().shape({\n        uf: Yup.string().required('UF obrigatória').min(2, 'UF inválida'),\n        city: Yup.string().required('Cidade obrigatória'),\n        latitude: Yup.number().required('Latitudade obrigatória'),\n        longitude: Yup.number().required('Longitude obrigatória'),\n        partyName: Yup.string().required('Nome da festa obrigatório'),\n        typeParty: Yup.string().required('Tipo da festa festa obrigatório'),\n        description: Yup.string().optional(),\n        whatsapp: Yup.string().matches(phoneReg, 'Esse número de telefone não é válido'),\n        date: Yup.string().required('Data dia, mês, ano são obrigatórios'),\n        time: Yup.string().required('Horário obrigatótio'),\n      })\n\n      await schema.validate(data, {\n        abortEarly: false,\n      })\n      console.log(data)\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidationErrors(err)\n\n        formRef.current?.setErrors(errors)\n        console.log(errors)\n\n        return\n      }\n      Alert.alert('Erro no cadastro',\n        'Ocorreu um erro ao fazer cadastro, tente novamente.')\n    }\n  }, [])\n\n  const navigation = useNavigation()\n  const formRef = useRef<FormHandles>(null)\n\n  const ufInputRef = useRef<TextInput>(null)\n  const cityInputRef = useRef<TextInput>(null)\n  const latitudeInputRef = useRef<TextInput>(null)\n  const longitudeInputRef = useRef<TextInput>(null)\n  const partyNameInputRef = useRef<TextInput>(null)\n  const typePartyInputRef = useRef<TextInput>(null)\n  const descriptionInputRef = useRef<TextInput>(null)\n  const dateInputRef = useRef<TextInput>(null)\n  const timeInputRef = useRef<TextInput>(null)\n\n  return (\n    <>\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n        enabled\n      >\n        <ScrollView\n          keyboardShouldPersistTaps=\"handled\"\n          \n        >\n\n          <Container>\n            <BackToHome onPress={() => navigation.goBack()}>\n              <Icon name=\"arrow-left\" size={30} color=\"#34cb78\" />\n            </BackToHome>\n            <View style={{marginTop: 20}}>\n              <Title>Cadastrar festa</Title>\n            </View>\n\n            <Form ref={formRef}  onSubmit={dataTeste}>\n              <InputMask\n                returnKeyType=\"next\"\n                type='cel-phone'\n                name='whatsapp'\n                icon=\"\"\n                placeholder='Whatssap'\n                keyboardType=\"numeric\"\n                options={{\n                  maskType: 'BRL',\n                  withDDD: true,\n                  dddMask: '(99) '\n                }}\n                onChangeText={(text: string) => {\n                  setWhatsappMask(text)\n                  formRef.current?.setFieldValue('whatsapp', whatsappMask)\n                  \n                } }\n                value={whatsappMask}\n                onSubmitEditing={() => {\n                  ufInputRef.current?.focus()\n                }}\n              \n              />\n\n              <Input\n                ref={ufInputRef}\n                maxLength={2}\n                returnKeyType=\"next\"\n                autoCapitalize=\"characters\"\n                name=\"uf\"\n                icon=\"\"\n                placeholder=\"UF\"\n                onSubmitEditing={() => {\n                  cityInputRef.current?.focus()\n                }}\n              />\n              <Input\n                ref={cityInputRef}\n                returnKeyType=\"next\"\n                autoCapitalize=\"words\"\n                name=\"city\"\n                icon=\"\"\n                placeholder=\"Cidade\"\n                onSubmitEditing={() => {\n                  partyNameInputRef.current?.focus()\n                }}\n              />\n              <Input\n                ref={partyNameInputRef}\n                returnKeyType=\"next\"\n                autoCapitalize=\"words\"\n                name=\"partyName\"\n                icon=\"\"\n                placeholder=\"Nome da festa\"\n                onSubmitEditing={() => {\n                  typePartyInputRef.current?.focus()\n                }}\n              />\n              <Input\n                ref={typePartyInputRef}\n                returnKeyType=\"next\"\n                autoCapitalize=\"words\"\n                name=\"typeParty\"\n                icon=\"\"\n                placeholder=\"Tipo de festa\"\n                onSubmitEditing={() => {\n                  descriptionInputRef.current?.focus()\n                }}\n              />\n\n              <Input\n                ref={descriptionInputRef}\n                maxLength={200}\n                returnKeyType=\"send\"\n                autoCapitalize=\"sentences\"\n                name=\"description\"\n                icon=\"\"\n                placeholder=\"Descrição\"\n                onSubmitEditing={() => {\n                  {/* Aqui será redirecionado para o proximo form que será horário depois o local */ }\n                  formRef.current?.submitForm()\n                }}\n              />\n\n            </Form>\n            <Button onPress={() => navigation.navigate('PartyRegistrationMap')}>Próximo</Button>\n          </Container>\n\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </>\n\n  )\n}\n\nexport default SignUp"]},"metadata":{},"sourceType":"module"}