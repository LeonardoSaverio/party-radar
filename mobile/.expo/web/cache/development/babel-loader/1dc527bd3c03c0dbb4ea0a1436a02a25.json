{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/monokuma/dev/ProjetoIntegrador/party-radar/src/pages/PartyRegistration/PartyRegistrationDateTime/index.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport Button from \"../../../components/Button\";\nimport { Container, Title, BackToHome, ButtonDateTime, ButtonDateTimeText } from \"./styles\";\n\nvar PartyRegistrationDateTime = function PartyRegistrationDateTime() {\n  function formatToHoursAndMinutes(date) {\n    var h = date.getHours();\n    var m = date.getMinutes();\n    var formated = (h < 10 ? '0' + h : h) + \":\" + (m < 10 ? '0' + m : m);\n    return formated;\n  }\n\n  function formatDate(date) {\n    var d = date.getDay();\n    var m = date.getMonth();\n    var y = date.getFullYear();\n    var formated = (d < 10 ? '0' + d : d) + \"/\" + (m < 10 ? '0' + m : m) + \"/\" + y;\n    return formated;\n  }\n\n  var navigation = useNavigation();\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      hour = _useState2[0],\n      setHour = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState('date'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setHour(currentDate);\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, React.createElement(BackToHome, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: 30,\n    color: \"#34cb78\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })), React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Escolha uma data e hor\\xE1rio\")), React.createElement(View, {\n    style: {\n      width: '100%',\n      marginTop: '30%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, React.createElement(ButtonDateTime, {\n    onPress: showDatepicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    style: {\n      marginRight: '3%'\n    },\n    name: \"calendar\",\n    color: \"#fff4\",\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), React.createElement(ButtonDateTimeText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, formatDate(date))), React.createElement(ButtonDateTime, {\n    onPress: showTimepicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    style: {\n      marginRight: '3%'\n    },\n    name: \"clock\",\n    color: \"#fff4\",\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), React.createElement(ButtonDateTimeText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, formatToHoursAndMinutes(hour)))), React.createElement(View, {\n    style: {\n      width: '100%',\n      marginTop: '60%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Cadastrar\")), show && React.createElement(DateTimePicker, {\n    locale: \"pt-BR\",\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: mode === 'date' ? 'date' : 'time',\n    is24Hour: true,\n    display: \"default\",\n    minimumDate: new Date(),\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default PartyRegistrationDateTime;","map":{"version":3,"sources":["/home/monokuma/dev/ProjetoIntegrador/party-radar/src/pages/PartyRegistration/PartyRegistrationDateTime/index.tsx"],"names":["React","useState","DateTimePicker","Feather","Icon","useNavigation","Button","Container","Title","BackToHome","ButtonDateTime","ButtonDateTimeText","PartyRegistrationDateTime","formatToHoursAndMinutes","date","h","getHours","m","getMinutes","formated","formatDate","d","getDay","getMonth","y","getFullYear","navigation","Date","hour","setHour","setDate","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","showTimepicker","flex","undefined","goBack","width","marginTop","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Platform, Text, KeyboardAvoidingView, TextInput } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native'\n\nimport Button from '../../../components/Button'\n\n\nimport {\n  Container,\n  Title,\n  BackToHome,\n  ButtonDateTime,\n  ButtonDateTimeText,\n} from './styles'\nimport { RectButton } from 'react-native-gesture-handler';\n\nconst PartyRegistrationDateTime = () => {\n\n  function formatToHoursAndMinutes(date: Date){\n    const h = date.getHours()\n    const m = date.getMinutes()\n    const formated = `${(h < 10) ? '0' + h : h}:${(m < 10) ? '0' + m : m}`\n    return formated\n  }\n\n\n  function formatDate(date: Date){\n    const d = date.getDay()\n    const m = date.getMonth()\n    const y = date.getFullYear()\n    const formated = `${(d < 10) ? '0' + d : d }/${(m < 10) ? '0' + m : m }/${y}`\n    return formated\n  }\n\n\n  const navigation = useNavigation()\n\n  const [hour, setHour] = useState(new Date());\n  const [date, setDate] = useState(new Date());\n  const [mode, setMode] = useState('date');\n  const [show, setShow] = useState(false);\n\n  const onChange = (event: any, selectedDate: any): any => {\n    const currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setHour(currentDate)\n    setDate(currentDate);\n  };\n\n  const showMode = (currentMode: string) => {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  const showDatepicker = () => {\n    showMode('date');\n  };\n\n  const showTimepicker = () => {\n    showMode('time');\n  };\n\n  return (\n    <>\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n        enabled\n      >\n        <Container>\n          <View>\n            <BackToHome onPress={() => navigation.goBack()}>\n              <Icon name=\"arrow-left\" size={30} color=\"#34cb78\" />\n            </BackToHome>\n\n            <Title>Escolha uma data e horário</Title>\n          </View>\n\n          <View style={{ width: '100%', marginTop: '30%' }}>\n\n            <ButtonDateTime onPress={showDatepicker}>\n              <Icon style={{ marginRight: '3%' }} name=\"calendar\" color=\"#fff4\" size={20} />\n              <ButtonDateTimeText>\n                {formatDate(date)}\n              </ButtonDateTimeText>\n            </ButtonDateTime>\n\n            <ButtonDateTime onPress={showTimepicker}>\n              <Icon style={{ marginRight: '3%' }} name=\"clock\" color=\"#fff4\" size={20} />\n              <ButtonDateTimeText>\n                {formatToHoursAndMinutes(hour)}\n              </ButtonDateTimeText>\n            </ButtonDateTime>\n\n          </View>\n\n          <View style={{ width: '100%', marginTop: '60%' }}>\n            <Button onPress={()=>{}}>Cadastrar</Button>\n          </View>\n\n\n          {show && (\n            <DateTimePicker\n              locale=\"pt-BR\"\n              testID=\"dateTimePicker\"\n              value={date}\n              mode={mode === 'date' ? 'date' : 'time'}\n              is24Hour={true}\n              display=\"default\"\n              minimumDate={new Date}\n              onChange={onChange}\n            />\n          )}\n\n        </Container>\n      </KeyboardAvoidingView>\n\n    </>\n  );\n};\n\n\nexport default PartyRegistrationDateTime"]},"metadata":{},"sourceType":"module"}