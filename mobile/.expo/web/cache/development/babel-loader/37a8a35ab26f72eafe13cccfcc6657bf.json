{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/monokuma/dev/ProjetoIntegrador/party-radar/src/pages/PartyRegistration/PartyRegristrationMap/index.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport MapView, { Marker } from 'react-native-maps';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport Button from \"../../../components/Button\";\nimport { Container, Title, BackToHome, ButtonContainer, MapContainer } from \"./styles\";\n\nvar PartyRegistrationMap = function PartyRegistrationMap() {\n  var _useState = useState([0, 0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      region = _useState2[0],\n      setRegion = _useState2[1];\n\n  var navigation = useNavigation();\n  return React.createElement(React.Fragment, null, React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(BackToHome, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: 30,\n    color: \"#34cb78\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Escolha um ponto no mapa\")), React.createElement(MapContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(MapView, {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    initialRegion: {\n      latitude: -27.2092052,\n      longitude: -49.6401092,\n      latitudeDelta: 0.014,\n      longitudeDelta: 0.014\n    },\n    onPress: function onPress(e) {\n      var _e$nativeEvent$coordi = e.nativeEvent.coordinate,\n          latitude = _e$nativeEvent$coordi.latitude,\n          longitude = _e$nativeEvent$coordi.longitude;\n      setRegion([latitude, longitude]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: region[0],\n      longitude: region[1]\n    },\n    title: \"FESTA\",\n    description: \"Festa 1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }))), React.createElement(ButtonContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    icon: \"\",\n    onPress: function onPress() {\n      navigation.navigate('PartyRegistrationDateTime');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Pr\\xF3ximo\")))));\n};\n\nexport default PartyRegistrationMap;","map":{"version":3,"sources":["/home/monokuma/dev/ProjetoIntegrador/party-radar/src/pages/PartyRegistration/PartyRegristrationMap/index.tsx"],"names":["React","useState","MapView","Marker","Feather","Icon","useNavigation","Button","Container","Title","BackToHome","ButtonContainer","MapContainer","PartyRegistrationMap","region","setRegion","navigation","flex","Platform","OS","undefined","goBack","width","height","latitude","longitude","latitudeDelta","longitudeDelta","e","nativeEvent","coordinate","navigate"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport { Image, View, ScrollView, KeyboardAvoidingView, Platform, TextInput, Alert } from 'react-native'\nimport MapView, { Marker } from 'react-native-maps'\n\nimport { Feather as Icon } from '@expo/vector-icons'\nimport { useNavigation } from '@react-navigation/native'\nimport { Form } from '@unform/mobile'\nimport { FormHandles } from '@unform/core'\nimport * as Yup from 'yup'\nimport getValidationErrors from '../../../utils/getValidationErrors'\n\nimport Button from '../../../components/Button'\n\n\n\nimport {\n  Container,\n  Title,\n  BackToHome,\n  ButtonContainer,\n  MapContainer,\n} from './styles'\n\n/*\nBom eu vou pegar e deixar o usuário inserir o endereço completo, depois passar para o mapa\npara ele conferir a localização. Outra forma seria do jeito basico, ele seleciona estado e \ncidade e depois marca o ponto no mapa\n*/\nconst PartyRegistrationMap: React.FC = () => {\n  const [region, setRegion] = useState<[number, number]>([0, 0])\n  const navigation = useNavigation()\n  return (\n\n    <>\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n        enabled\n      >\n        <Container>\n\n          <BackToHome onPress={() => navigation.goBack()}>\n            <Icon name=\"arrow-left\" size={30} color=\"#34cb78\" />\n          </BackToHome>\n          <View>\n            <Title>Escolha um ponto no mapa</Title>\n          </View>\n\n          <MapContainer>\n            <MapView style={{ width: '100%', height: '100%' }}\n              initialRegion={{\n                latitude: -27.2092052,\n                longitude: -49.6401092,\n                latitudeDelta: 0.014,\n                longitudeDelta: 0.014,\n              }}\n\n              onPress={(e) => {\n                const { latitude, longitude } = e.nativeEvent.coordinate\n                setRegion([latitude, longitude])\n              }}\n            >\n              <Marker\n                coordinate={{ latitude: region[0], longitude: region[1] }}\n                title=\"FESTA\"\n                description=\"Festa 1\"\n              />\n            </MapView>\n          </MapContainer>\n\n\n          <ButtonContainer>\n            <Button icon=\"\" onPress={() => {navigation.navigate('PartyRegistrationDateTime') }}>Próximo</Button>\n          </ButtonContainer>\n\n        </Container>\n      </KeyboardAvoidingView>\n    </>\n\n  )\n}\n\nexport default PartyRegistrationMap"]},"metadata":{},"sourceType":"module"}