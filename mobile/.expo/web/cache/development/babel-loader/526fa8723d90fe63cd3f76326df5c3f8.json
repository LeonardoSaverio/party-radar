{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/monokuma/dev/ProjetoIntegrador/party-radar/src/pages/PartyRegistration/PartyRegistrationDateTime/index.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport Button from \"../../../components/Button\";\nimport { Container, Title, BackToHome } from \"./styles\";\n\nvar PartyRegistrationDateTime = function PartyRegistrationDateTime() {\n  var navigation = useNavigation();\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      hour = _useState2[0],\n      setHour = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState('date'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setHour(currentDate);\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 10,\n      marginBottom: '80%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(BackToHome, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: 30,\n    color: \"#34cb78\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })), React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Escolha uma data e hor\\xE1rio\")), React.createElement(View, {\n    style: {\n      width: '100%',\n      marginTop: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    onPress: showDatepicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Show date picker!\"), React.createElement(Text, {\n    style: {\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }\n  }, \" \", hour.getTime()), React.createElement(Button, {\n    onPress: showTimepicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, date.getHours().toString()), React.createElement(Text, {\n    style: {\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }\n  }, \" Horas: \", date.getHours(), \" Minutos: \", date.getMinutes())), show && React.createElement(DateTimePicker, {\n    locale: \"pt-BR\",\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: mode === 'date' ? 'date' : 'time',\n    is24Hour: true,\n    display: \"default\",\n    minimumDate: new Date(),\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default PartyRegistrationDateTime;","map":{"version":3,"sources":["/home/monokuma/dev/ProjetoIntegrador/party-radar/src/pages/PartyRegistration/PartyRegistrationDateTime/index.tsx"],"names":["React","useState","DateTimePicker","Feather","Icon","useNavigation","Button","Container","Title","BackToHome","PartyRegistrationDateTime","navigation","Date","hour","setHour","date","setDate","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","showTimepicker","flex","undefined","marginTop","marginBottom","goBack","width","color","getTime","getHours","toString","getMinutes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Platform, Text, KeyboardAvoidingView, TextInput } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native'\n\nimport Button from '../../../components/Button'\n\nimport {\n  Container,\n  Title,\n  BackToHome,\n} from './styles'\n\nconst PartyRegistrationDateTime = () => {\n\n  const navigation = useNavigation()\n\n  const [hour, setHour] = useState(new Date());\n  const [date, setDate] = useState(new Date());\n  const [mode, setMode] = useState('date');\n  const [show, setShow] = useState(false);\n\n  const onChange = (event: any, selectedDate: any): any => {\n    const currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setHour(currentDate)\n    setDate(currentDate);\n  };\n\n  const showMode = (currentMode: string) => {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  const showDatepicker = () => {\n    showMode('date');\n  };\n\n  const showTimepicker = () => {\n    showMode('time');\n  };\n\n  return (\n    <>\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n        enabled\n      >\n        <Container>\n          <View style={{ marginTop: 10, marginBottom: '80%' }}>\n            <BackToHome onPress={() => navigation.goBack()}>\n              <Icon name=\"arrow-left\" size={30} color=\"#34cb78\" />\n            </BackToHome>\n\n            <Title>Escolha uma data e horário</Title>\n          </View>\n\n          <View style={{width: '100%', marginTop: 0}}>\n            <Button onPress={showDatepicker}>Show date picker!</Button>\n            {<Text style={{ color: '#fff' }}> {hour.getTime()}</Text>}\n\n\n\n            <Button onPress={showTimepicker}>{date.getHours().toString()}</Button>\n            {<Text style={{ color: '#fff' }}> Horas: {date.getHours()} Minutos: {date.getMinutes()}</Text>}\n          </View>\n\n\n\n          {show && (\n            <DateTimePicker\n              locale=\"pt-BR\"\n              testID=\"dateTimePicker\"\n              value={date}\n              mode={mode === 'date' ? 'date' : 'time'}\n              is24Hour={true}\n              display=\"default\"\n              minimumDate={new Date}\n              onChange={onChange}\n            />\n          )}\n\n        </Container>\n      </KeyboardAvoidingView>\n\n    </>\n  );\n};\n\n\nexport default PartyRegistrationDateTime"]},"metadata":{},"sourceType":"module"}